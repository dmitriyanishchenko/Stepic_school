# a = 11111 * 1111111
# print(a)
# # result = 42 / (2*-2 + 4)
# # print(result)
# a = 2014 ** 14
# print(0.3 + 0.3 + 0.3)
# print(5 / 2)
# print(5 // 2)
# print(5 % 2)
# print(2 ** 5)
# print(9 ** 0.5)
# print(5e-1)
# print(1234e-2)
# print(1.2345e3)
# print(2014.0 ** 14)
# print(7 / 3)
# print(7 // 3)
# print(type(str(2.2)))
# print(type(2))
# a = 2.9955454454
# c = int(a)
# print(a, c)
# print(type(a), type(c))
# print(int(-1.6))
# print(9 ** 19 - int(float(9 ** 19)))
# say_1 = 9 ** 19
# say_2 = int(float(9 ** 19))
# print(say_1, say_2)
# string_ = f'ответ равен {str((say_1 - say_2) / say_1 * 100)} %'
# print(string_)

# while True:
#     a = input('Введите данные:')
#     if a == 0:
#         print('Пока')
#         continue
#     elif a.isdigit():
#         print(f'Вы ввели число')
#     elif a.isalpha():
#         print(f'Вы ввели буквы')
#     elif a.isalnum():
#         print(f'Вы ввели буквы и цифры')

#
# list1 = ["what", "I'm", "sorting", "by"]
# list2 = ["something", "else", "to", "sort"]
# pairs = zip(list1, list2)
# print(list(pairs))
# T1 = (('1', '2', '2', '4', '34'),
#       ('07', '11', '13', '14', '28'),
#       ('01', '05', '06', '08', '15', '16'))
# print(T1)
# T2 = [list(map(int, x)) for x in T1]
# print(T2)
# TL = tuple(T2)
# print(TL)

# string = tuple('abc')
# res = list(string)
# res = len(res)
# res = str(res)
# print(res)
# for __ in string:
#     print(__)
#
# dict_1 = {x: str(x) + 'abc' for x in range(5)}
# print(dict_1)
#
# print(5 != 2+3)


# while 1:
#     x = int(input('Enter number:'))
#     print('negative') if x < 0 else print('positive')

# while 2:
#     x = int(input('Enter еwo-digit positive number:'))
#     print("+ok+") if 9 < x < 100 else print("-not-")

# x1, x2, x3 = False, True, False
# print(not x1 or x2 and x3)

# a, b = True, False
# print((a and b) or ((not a) and (not b)))
#

# x = 5
# y = 10
# print(y > x * x or y >= 2 * x and x < y)

# a = True
# b = False
# print(a and b or not a and not b)
# print(False or False and False)

# a = int(input('Введите первое число:'))
# b = int(input('Введите второе число:'))
# if b != 0:
#     print(a / b)
# else:
#     print('Деление невозможно')
#     b = int(input('Введите второе число:'))
#     if b == 0:
#         print('Вы не справились с заданием !')
#     else:
#         print(a/b)

# print('First line', '\n\n\n\n', 'Second line')

# a = 'string'
# b = 'another string'
# print(a, b)
# print(a + " " + b)
# print(a)
# print(b)
# print(a + "\n" + b)
"""
площадь треугольника по формуле Герона

"""
# a = int(input('введите длину стороны  a:'))
# b = int(input('введите длину стороны  b:'))
# c = int(input('введите длину стороны  c:'))
# p = (a + b + c) / 2  # Полупериметр
# s = (p * (p - a) * (p - b) * (p - c)) ** 0.5  # площадь треугольника по формуле Герона
# print(s)

"""
Напишите программу, принимающую на вход целое число, которая выводит True, если переданное значение
попадает в интервал (−15,12]∪(14,17)∪[19,+∞) и False в противном случае (регистр символов имеет значение).

Обратите внимание на разные скобки, используемые для обозначения интервалов. В задании используются
полуоткрытые и открытые интервалы. Подробнее про это вы можете прочитать, например, на википедии
(полуинтервал, промежуток).
"""
# a = int(input())
# print(-15 < a <= 12 or 14 < a < 17 or a >= 19)


"""
Напишите простой калькулятор, который считывает с пользовательского ввода три строки: первое число, второе число и операцию, после чего применяет операцию к введённым числам ("первое число" "операция" "второе число") и выводит результат на экран.

Поддерживаемые операции: +, -, /, *, mod, pow, div, где
mod — это взятие остатка от деления,
pow — возведение в степень,
div — целочисленное деление.

Если выполняется деление и второе число равно 0, необходимо выводить строку "Деление на 0!".

Обратите внимание, что на вход программе приходят вещественные числа.

"""

# a = float(input())
# b = float(input())
# c = input()
# if c != "+" and c != "-" and c != "/" and c != "*" and c != "mod" and c != "pow" and c != "div":
#     print('Input Incorrect. Please try again !')
# if b == 0 and (c == '/' or c == 'mod' or c == 'div'):
#     print('Деление на 0!')
# elif c == '*':
#     print(a * b)
# elif c == '/':
#     print(a / b)
# elif c == '+':
#     print(a + b)
# elif c == '-':
#     print(a - b)
# elif c == 'mod':
#     print(a % b)
# elif c == 'div':
#     print(a // b)
# elif c == 'pow':
#     print(a ** b)

"""
  Жители страны Малевии часто экспериментируют с планировкой комнат. Комнаты бывают треугольные,
 прямоугольные и круглые. Чтобы быстро вычислять жилплощадь, требуется написать программу, 
 на вход которой подаётся тип фигуры комнаты и соответствующие параметры, которая бы выводила 
 площадь получившейся комнаты.
 Для числа π в стране Малевии используют значение 3.14.

Формат ввода, который используют Малевийцы:

треугольник
a
b
c

где a, b и c — длины сторон треугольника

прямоугольник
a
b

где a и b — длины сторон прямоугольника

круг
r

где r — радиус окружности


"""
# figure = input()
# if figure == 'треугольник':
#     a = int(input())
#     b = int(input())
#     c = int(input())
#     p = (a + b + c) / 2  # Полупериметр
#     s = (p * (p - a) * (p - b) * (p - c)) ** 0.5  # площадь треугольника по формуле Герона
# elif figure == 'прямоугольник':
#     a = float(input())
#     b = float(input())
#     s = a * b
# elif figure == 'круг':
#     r = int(input())
#     s = 3.14 * r ** 2
# print(s)

"""
Напишите программу, которая получает на вход три целых числа, по одному числу в строке, и выводит
на консоль в три строки сначала максимальное, потом минимальное, после чего оставшееся число.

На ввод могут подаваться и повторяющиеся числа.

"""
# a = int(input())
# b = int(input())
# c = int(input())
# res_max = max(a, b, c)
# print(res_max)
# res_min = min(a, b, c)
# print(res_min)
# if a <= b <= c or c <= b <= a:
#     print(b)
# elif b <= a <= c or c <= a <= b:
#     print(a)
# elif a <= c <= b or b <= c <= a:
#     print(c)


"""
В институте биоинформатики по офису передвигается робот. Недавно студенты из группы программистов 
написали для него программу, по которой робот, когда заходит в комнату, считает количество программистов
 в ней и произносит его вслух: "n программистов".

Для того, чтобы это звучало правильно, для каждого n нужно использовать верное окончание слова.

Напишите программу, считывающую с пользовательского ввода целое число n (неотрицательное), выводящее 
это число в консоль вместе с правильным образом изменённым словом "программист", для того, чтобы робот 
мог нормально общаться с людьми, например: 1 программист, 2 программиста, 5 программистов.

В комнате может быть очень много программистов. Проверьте, что ваша программа правильно обработает 
все случаи, как минимум до 1000 человек.

Дополнительный комментарий к условию:
Обратите внимание, что задача не так проста, как кажется на первый взгляд. Если ваше решение не проходит
 какой-то тест, это значит, что вы не рассмотрели какой-то из случаев входных данных (число программистов 0≤n≤1000). 
Обязательно проверяйте свои решения на дополнительных значениях, а не только на тех, что приведены в условии задания. 
"""

# a = int(input())
# if 0 <= a <= 1000:
#     if a in range(11, 15) or a % 100 in range(11, 15):
#         print(f'{a} программистов')
#     elif a == 1 or a % 100 % 10 == 1:
#         print(f'{a} программист')
#     elif (a in [2, 3, 4] or a % 10 in [2, 3, 4] or a % 100 % 10 in [2, 3, 4]) and a not in [12, 13, 14]:
#         print(f'{a} программиста')
#     elif a in [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] or a % 10 in [0, 5, 6, 7, 8, 9, 11] \
#             or a % 100 % 10 in [0, 5, 6, 7, 8, 9]:
#         print(f'{a} программистов')

# while 2: # САМОЕ КРУТОЕ РЕШЕНИЕ!!!
#     n = int(input())
#     print(n,
#           'программист' + (
#               'ов' if n % 10 == 0 or 4 < n % 10 < 10 or 10 < n % 100 < 15 else 'а' if 1 < n % 10 < 5 else ''))


"""
Паша очень любит кататься на общественном транспорте, а получая билет, сразу проверяет, счастливый ли ему попался. Билет считается счастливым, если сумма первых трех цифр совпадает с суммой последних трех цифр номера билета.

Однако Паша очень плохо считает в уме, поэтому попросил вас написать программу, которая проверит равенство сумм и выведет "Счастливый", если суммы совпадают, и "Обычный", если суммы различны.

На вход программе подаётся строка из шести цифр.

Выводить нужно только слово "Счастливый" или "Обычный", с большой буквы.
"""
# a = list(input())
# sum_left = int(a[0]) + int(a[1]) + int(a[2])
# sum_right = int(a[3]) + int(a[4]) + int(a[5])
# if sum_left == sum_right:
#     print('Счастливый')
# else:
#     print('Обычный')


"""
Из передачи “Здоровье” Аня узнала, что рекомендуется спать хотя бы A часов в сутки, но пересыпать тоже вредно
и не стоит спать более B часов. Сейчас Аня спит H часов в сутки. Если режим сна Ани удовлетворяет рекомендациям 
передачи “Здоровье”, выведите “Это нормально”. Если Аня спит менее A часов, выведите “Недосып”, если же более
 B часов, то выведите “Пересып”.

Получаемое число A всегда меньше либо равно B.

На вход программе в три строки подаются переменные в следующем порядке: A, B, H.

Обратите внимание на регистр символов: вывод должен в точности соответствовать описанному в задании, т. е. если 
программа должна вывести "Пересып", выводы программы "пересып", "ПЕРЕСЫП", "ПеРеСыП" и другие не будут считаться 
верными.

Это первое не самое тривиальное задание на условное выражение. В случаях, когда разбить исполнение программы на 
несколько направлений, стоит внимательно обдумать все условия, которые нужно использовать. Особое внимание стоит
уделить строгости используемых условных операторов: различайте < и ≤; > и ≥. Для того, чтобы понимать, какой из них стоит использовать, внимательно прочитайте условие задания.
"""
# a = int(input())
# b = int(input())
# h = int(input())
# if h < a:
#     print('Недосып')
# elif a <= h <= b:
#     print('Это нормально')
# else:
#     print('Пересып')

"""
Определить, является ли год високосным. 
"""
# a = int(input())
# if (a % 4 == 0 and not a % 100 == 0) or a % 400 == 0:
#     print('Високосный')
# else:
#     print('Обычный')

# a =5
# while a > 0:
#     print(a, end=' ')
#     a -= 1


